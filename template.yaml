AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  cloud-Resume

  Sample SAM Template for cloud-Resume


Globals:
  Function:
    Timeout: 3
    MemorySize: 128

Resources:
  
  MyWebsite1:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
      BucketName: zakariyahs-website-2
  
  MyWebsite1:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicPolicy: false
        RestrictPublicBuckets: false
  
  
  MyCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: zakariyahs-website.com 
      ValidationMethod: DNS
  
  
  MyDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        ViewerCertificate:
          AcmCertificateArn: !Ref MyCertificate
          SslSupportMethod: sni-only
        Aliases:
          - zakariyahs-website.com 
        DefaultCacheBehavior:
          ViewerProtocolPolicy: allow-all
          TargetOriginId: cloud-resume-mywebsite1-12cdzjrxg6dj2.s3-website-us-east-1.amazonaws.com
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
          ForwardedValues:
            QueryString: false
        Origins:
          - DomainName: cloud-resume-mywebsite1-12cdzjrxg6dj2.s3-website-us-east-1.amazonaws.com
            Id: cloud-resume-mywebsite1-12cdzjrxg6dj2.s3-website-us-east-1.amazonaws.com
            CustomOriginConfig:
              OriginProtocolPolicy: match-viewer
        Enabled: "true"
        DefaultRootObject: index.html
  
  MyRoute53Record:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneId: Z09896863H6K1GP78S66K 
      RecordSets:
        - Name: website.zakariyahs-website.com
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt MyDistribution.DomainName
  
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: cloud-resume-challenge
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: "ID"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "ID"
          KeyType: "HASH"

#  BucketPolicy:
#    Type: AWS::S3::BucketPolicy
#    Properties:
#      PolicyDocument:
#        Id: MyPolicy
#        Version: 2012-10-17
#        Statement:
#          - Sid: PublicReadForGetBucketObjects
#            Effect: Allow
#            Principal: "*"
#            Resource: !Join
#            Action: "s3:GetObject"
#              - ""
#              - - "arn:aws:s3:::"
#                - !Ref MyWebsite1
#                - /*
#      Bucket: !Ref MyWebsite1


  lambdaFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Policies:
      - DynamoDBCrudPolicy:
          TableName: cloud-resume-challenge
      CodeUri: lambda_handler/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /get
            Method: get
     

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get/"
  lambdaFunction:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt lambdaFunction.Arn
  lambdaFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value: !GetAtt lambdaFunction.Arn